language: c
os:
 - linux
 - osx
env:
 matrix:
  - PYTHON_VERSION=2.7
  - PYTHON_VERSION=3.4
  - PYTHON_VERSION=3.5
  - PYTHON_VERSION=3.6

before_install:
#  - sudo apt-get update
#  - sudo apt-get install libhdf5-serial-dev libqt4-dev
#  - if [[ $TRAVIS_OS_NAME == linux ]]; then sudo apt-get install libc-bin=2.12.1-0ubuntu10.2 libc6=2.12.1-0ubuntu10.2; fi
  - echo $TRAVIS_TAG
  - if [ "$TRAVIS_TAG" != "" ]; then echo "bla"; fi
  - if [[ $TRAVIS_OS_NAME == linux ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
  - if [[ $TRAVIS_OS_NAME == osx ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  # future: kapteyn should only be needed for astro package testing  
  - conda create -q -n test-environment -c conda-forge python=$PYTHON_VERSION pip numpy scipy pyqt matplotlib pyopengl h5py numexpr astropy tornado cython runipy pandas kapteyn pytest numba
  - which pip
  - source activate test-environment
  - which pip
  # - conda install -c conda-forge pandas kapteyn # these extra installs should disappear
  # - conda create --name dev --clone test
#  - pip install -r requirements.txt
install:
  - source activate test-environment
  - (cd packages/vaex-core; pip install -v .)
  - (cd packages/vaex-hdf5; pip install -v .)
  - (cd packages/vaex-viz; pip install -v .)
  - (cd packages/vaex-server; pip install -v .)
  - (cd packages/vaex-astro; pip install -v .)
  - (cd packages/vaex-distributed; pip install -v .)
  - (cd packages/vaex-jupyter; pip install -v .)
  - (cd packages/vaex-ui; pip install -v .)
  # - source activate dev
  # - (cd packages/vaex-core; pip install -v -.)
  # - (cd packages/vaex-hdf5; pip install -v .)
  # - (cd packages/vaex-viz; pip install -v .)
  # - (cd packages/vaex-server; pip install -v .)
script:
  - source activate test-environment
  - python -m vaex.test.dataset
  - py.test tests/
  # - runipy examples/tutorial_ipython_notebook.ipynb
  # - runipy examples/advanced_plotting.ipynb
  # - source activate dev
  # - python -m vaex.test.dataset TestDataset
# - export PACKAGE_NAME=`python -c "import vaex; print vaex.__build_name__"`
# - python bin/make_dropbox_uploader_conf.py ~/.dropbox_uploader
# - curl "https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh" -o dropbox_uploader.sh
# - bash dropbox_uploader.sh upload setup.py setup.py
# - if [[ $TRAVIS_OS_NAME == osx ]] && [[ "$TRAVIS_TAG" != "" ]]; then echo "release"; bash bin/build_binary_osx.sh; fi
# - if [[ $TRAVIS_OS_NAME == linux ]] && [[ "$TRAVIS_TAG" != "" ]]; then echo "release"; pip install pyinstaller; pyinstaller vaex.spec; fi
# - ls dist
# - if [[ $TRAVIS_OS_NAME == osx ]] && [[ "$TRAVIS_TAG" != "" ]]; then bash dropbox_uploader.sh upload dist/${PACKAGE_NAME}.zip ${PACKAGE_NAME}.zip; fi
# - if [[ $TRAVIS_OS_NAME == linux ]] && [[ "$TRAVIS_TAG" != "" ]]; then cd dist; tar zcfv ${PACKAGE_NAME}.tar.gz ${PACKAGE_NAME}; bash ../dropbox_uploader.sh upload ${PACKAGE_NAME}.tar.gz ${PACKAGE_NAME}.tar.gz; cd ..; fi



